# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Permission {
  id: ID!
  name: String!
}

type Role {
  id: ID!
  name: String!
  permissions: [Permission!]
  users: [User!]
}

type Landlord {
  id: String!
  fullName: String
  phoneNumber: String!
  profilePicture: String
  companyName: String
  companyAddress: String
  taxId: String
  idDocument: String
  proofOfOwnership: String
  address: String
  city: String!
  country: String!
  preferredPaymentMethod: String
  preferredCurrency: String
  email: String!
  user: User!
  isActive: Boolean!
  registrationDate: DateTime!
  lastLogin: DateTime
  profileCompleted: Boolean!
  notes: String
  kycVerified: Boolean!
  kycVerificationDate: DateTime
  kycStatus: String
  kycRejectionReason: String
  kycDocumentUrl: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Tenant {
  id: String!
  fullName: String!
  phoneNumber: String!
  profilePicture: String
  address: String!
  city: String!
  country: String!
  preferredPaymentMethod: String
  preferredCurrency: String
  user: User!
}

type Category {
  id: ID!
  name: String
  properties: [Property!]!
  user: User!
}

type Tag {
  id: ID!
  name: String!
  properties: [Property!]!
  user: User!
}

type Amenity {
  id: String!
  name: String!
}

type PropertyImage {
  id: String!
  imageUrl: String!
  description: String
  order: Float!
}

type PropertyStatus {
  id: String!
  status: String!
}

type RentalHistory {
  id: String!
  startDate: DateTime!
  endDate: DateTime!
}

type Review {
  id: String!
  rating: Float!
  comment: String
}

type Rule {
  id: String!
  name: String!
}

type PaymentCondition {
  id: String!
  name: String!
}

type Location {
  id: String!
  country: String!
  city: String!
  neighborhood: String
  latitude: Float
  longitude: Float
}

type Property {
  id: ID!
  name: String
  price: Float!
  location: String
  status: String
  description: String
  createdBy: User!
  categories: [Category!]!
  tags: [Tag!]
  createdAt: DateTime!
  updatedAt: DateTime!
  locationProperty: Location!
  amenities: [Amenity!]!
  rules: [Rule!]!
  paymentConditions: [PaymentCondition!]!
  statusPayments: PropertyStatus!
  reviews: [Review!]!
  rentalHistory: [RentalHistory!]!
  images: [PropertyImage!]!
}

type User {
  id: String!
  name: String!
  email: String!
  primaryRole: String!
  roles: [Role!]!
  properties: [Property!]!
  categories: [Category!]!
  tags: [Tag!]!
}

type Admin {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  tenent(id: Int!): Tenant!
  admin_users(roles: [validRoles!]): [User!]!
  admin(id: Int!): Admin!
  roles: [Role!]!
  user: [User!]!
  listAllUserLoandLord: [Landlord!]!
  findOneUserLandlord(id: String!): Landlord!
}

"""estos son los roles permitodos para la plataforma"""
enum validRoles {
  LANDLORD
  TENANT
  ADMIN
  BUSINESS
}

type Mutation {
  createTenent(createTenentInput: CreateTenentInput!): Tenant!
  updateTenent(updateTenentInput: UpdateTenentInput!): Tenant!
  removeTenent(id: Int!): Tenant!
  createAdmin(createAdminInput: CreateAdminInput!): Admin!
  updateAdmin(updateAdminInput: UpdateAdminInput!): Admin!
  removeAdmin(id: Int!): Admin!
  toggleLandlordStatus(id: String!): Landlord!
}

input CreateTenentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateTenentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateAdminInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAdminInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}